Finding Minima

We can use << scipy.optimize.minimize() >> function to minimize the function.
The << minimize() >> function takes the following arguments:

fun  - a function representing an equation.
x0  - an initial guess for the root.
method  - name of the method to use. Legal values:
    'CG'
    'BFGS'
    'Newton-CG'
    'L-BFGS-B'
    'TNC'
    'COBYLA'
    'SLSQP'

callback -  function called after each iteration of optimization.

options -  a dictionary defining extra params:
    {
         "disp": boolean - print detailed description
         "gtol": number - the tolerance of the error
      }

methods

'SLSQP'
Algorithm which is able to tackle non-convex problems, in which case convergence
to some local-optimum is guaranteed (ignoring numerical-trouble within the
implementation; which is always a possible problem).

SLSQP will be less fast and less robust compared to algorithms which
are specifically designed for convex problems
